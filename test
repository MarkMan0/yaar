#!/bin/bash

fail() {
    echo "Fail: $*"
    exit 1
}

set -x
set -e

# set up
rm -rf triggered  test.tmp yaar/data
mkdir -p yaar/data/data2/dir1

# locks

## locked item should not be removed by trigger
curl -X POST -H "x-lock: first-lock" -H "x-expire: 1s" --data-binary lock-test localhost:8080/lock1 -v 2>&1 | tee output
grep "200 OK" output || fail "should be created"
sleep 2
curl localhost:8080/lock1 -v 2>&1 | tee output
grep "lock-test" output || fail "should still exist"
### add a new item with same lock
curl -X POST -H "x-lock: first-lock" -H "x-expire: 1s" --data-binary lock-test localhost:8080/lock2 -v 2>&1 | tee output
grep "200 OK" output || fail "should be created"
sleep 2
curl localhost:8080/lock1 -v 2>&1 | tee output
grep "HTTP/1.1 404 Not Found" output || fail "should be not found as it was expired earlier and no longer locked"
curl localhost:8080/lock2 -v 2>&1 | tee output
grep "200 OK" output || fail "should be ok as still locked"
### remove lock
curl -X DELETE localhost:8080/meta/lock2/locks -v 2>&1 | tee output
sleep 2
curl localhost:8080/lock2 -v 2>&1 | tee output
grep "HTTP/1.1 404 Not Found" output || fail "should be not found"

# nominal trigger
echo "test-data" > test.tmp
curl -X POST -H "x-tag: branch=master" -H "x-expire: 2s" --data-binary @test.tmp localhost:8080/asd -v 2>&1 | tee output
grep "200 OK" output || fail "should be created"

curl localhost:8080/asd -v 2>&1 | tee output
grep "test-data" output || fail "should be ok"
grep "Content-Length: 10" output || fail "should have content-length"
grep "branch master" triggered || fail "creation of triggered should be triggered"

# directory structure must exist
rm -rf yaar/data/data-ne
curl -H "x-expire: 3s" --data-binary @test.tmp localhost:8080/data-ne/file2 -v 2>&1 | tee output
grep "500 Internal" output || fail "upload should fail"
mkdir -p yaar/data/data-ne 
curl -H "x-expire: 3s" --data-binary @test.tmp localhost:8080/data-ne/file2 -v 2>&1 | tee output
grep "200 OK" output || fail "should be ok"

# upload same expect error
curl --data-binary @test.tmp localhost:8080/asd -v 2>&1 | tee output
grep "HTTP/1.1 400 Bad Request" output || fail "should be bad request"


# listing
curl localhost:8080/data-ne/ 2>&1 | tee output
grep '<title>Index of /data-ne/</title>' output || fail "should have title"
grep 'href="../"' output || fail "should have .."
grep 'href="file2"' output || fail "should have file2"
curl localhost:8080/ 2>&1 | tee output
grep '<title>Index of /</title>' output || fail "should have title"
grep -v 'href="../"' output || fail "should not have .."
grep 'href="asd"' output || fail "should have file2"

# expiry
sleep 2
curl  localhost:8080/asd -v 2>&1 | tee output
grep "HTTP/1.1 404 Not Found" output || fail "should be not found"

# # post to directory without name
# # this needs form upload. is it needed?
# curl -X POST -H "x-expire: 2s" --upload-file test.tmp localhost:8080/data2 -v 2>&1 | tee output
# grep "200 OK" output || fail "should be created"
# grep ":8080/data2/test.tmp" output || fail "should have link in response"
# curl localhost:8080/data2/test.tmp -v 2>&1 | tee output
# grep "200 OK" output || fail "should be ok"

# trigger
curl -H "x-expire: 3s" --data-binary @test.tmp localhost:8080/data2/dir1/testfile -v 2>&1 | tee output
grep "HTTP/1.1 200 OK" output || fail "should be ok"
grep "dir1" triggered || fail "file trigger should be triggered"
grep "data2" triggered || fail "file trigger on parent should be triggered"
grep "branch master" triggered || fail "tag=value trigger should be triggered"
grep "tag without value" triggered || fail "tag without value trigger should be triggered"
grep "tag branch test2" triggered && fail "tag branch test should not be triggered"

# delete should trigger too
rm -f triggered
sleep 3.1
grep "dir1" triggered || fail "should be triggered"
grep "data2" triggered || fail "should be triggered"

# cleanup
rm -f test.tmp output triggered
echo "all ok"